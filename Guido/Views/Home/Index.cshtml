@model ViewModel


@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-sm-9">

        <div class="form-group">
            <label for="sel1">Izaberi grad:</label>
            <select class="form-control" id="sel1">
                <option>------Odaberite grad-------</option>

                @foreach (Baza.City city in Model.City)
                {

                    <option>@Html.DisplayFor(modelItem => city.cityName)</option>

                }
            </select>
        </div>
    </div>
</div>
<div class="container">
    <div class="col-xs-8 col-sm-6 col-md-2">
        <div class="well well-sm">

            <div>
                <ul class="nav">
                    <li>
                        <label label-default="" class="tree-toggle nav-header">Postojeće rute</label>
                        <ul class="nav tree">
                            <li>

                                <a onclick="calcRoute(1);" id="route1" href="#">Brzi obilazak centra</a>
                            </li>
                            <li>
                                <a onclick="calcRoute(2);" id="route2" href="#">Detaljan obilazak centra</a>
                            </li>
                                @*@foreach (Baza.Route item in Model.Route)
                                    {
                                        <li>
                                            <a href="#">item.typOfRoute</a>
                                        </li>
                                    }*@
                        </ul>
                    </li>
                    <li>
                        <label label-default="" class="tree-toggle nav-header">Znamenitosti</label>
                        <ul class="nav tree">
                            <li>
                                    @foreach (var typeOfPlace in Model.TypeOfPlace)
                                    {
                                        <label label-default="" class="tree-toggle nav-header">@Html.DisplayFor(modelItem => typeOfPlace.NameTypeOfPlace) </label>
                                        <ul class="nav tree">
                                            @*@foreach (var place in Model.Place)
                                            {
                                                <li>@Html.DisplayFor(modelItem => place.name)</li>
                                            }*@
                                        </ul>
                                    }
                                <label label-default="" class="tree-toggle nav-header">Povijesne</label>
                                <ul class="nav tree">
                                    <li>
                                        <a href="#">Kula Lotršćak</a>
                                    </li>
                                    <li>
                                        <a href="#">Svenova jaja</a>
                                    </li>
                                </ul>
                            <li>
                                <label label-default="" class="tree-toggle nav-header">Moderne</label>
                                <ul class="nav tree">
                                    <li>
                                        <a href="#">MSU</a>
                                    </li>
                                    <li>
                                        <a href="#">Bandićeve fontane</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <style type="text/css">
            #map-canvas {
                height: 500px;
            }
        </style>

        <!--Connect to the google maps api using your api key-->
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCp3aNN7IXH_AmU59UH2g1s5QC4N2e7r6o&sensor=true"></script>

        <script type="text/javascript">
 
            var map;
            var markers = {
                'nameM': [],
                'descriptionM': [],
                'locationM': [],
                'addressM': [],
                'typePlaceM': []
            };
            window.directionsDisplay = new google.maps.DirectionsRenderer();
            window.directionsService = new google.maps.DirectionsService();
            var stepDisplay;
            var PointMarkers = [];

    //ovdje se u data vadi iz baze Place podaci
    var url = '/Home/GetJSONData';
    $.post(url, null, function (dataPlace) {
        var i = 0;
        // Iterate through the JSON array
        while (dataPlace.Name[i] != null) {
            //alert(dataPlace.Name[i]);
            var lokacija = new google.maps.LatLng(dataPlace.Latitude[i], dataPlace.Longitude[i]);
            markers.nameM[i] = dataPlace.Name[i];
            markers.descriptionM[i] = dataPlace.Description[i];
            markers.addressM[i] = dataPlace.Address[i];
            markers.locationM[i] = lokacija;
            markers.typePlaceM[i] = dataPlace.PlaceType[i];
            //alert(markers.nameM[i] + '::::' + markers.descriptionM[i] + '::::' + markers.addressM[i] + '::::' + markers.locationM[i] + '::::' + markers.typePlaceM[i]);
            i++;
        }
    }
);

    function initialize() {
        var mapCenter = new google.maps.LatLng(45.813209, 15.977283);
        var mapOptions = {
            zoom: 13,
            center: mapCenter,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        directionsDisplay.setMap(map);

        // This event listener will call addMarker() when the map is clicked.
        google.maps.event.addListener(map, 'click', function (event) {
            addMarker(event.latLng,"Odabrana lokacija");
        });

        // Adds a marker at the center of the map.
        addMarker(mapCenter,"Glavni trg Josipa bana Jelačića");

        // Sets the map on all markers in the array.

    }
    //ajmo racunati rute
    function calcRoute(ruta) {
        if (ruta == 0) {
            ruta = zadnjaRuta;
            } else {
            window.zadnjaRuta = ruta;
        }
        var waypts = [];
                var selectedMode = document.getElementById('travelType').value;
        switch (zadnjaRuta) {
            case 1:
                //PointMarkers = @@Html.Action("GetRoute", "Home", new { rt = 1 });
                $.getJSON('home/GetRoute', function (result) {
                    alert(result.RouteId);
                    if (result.RouteId == 1) {
                        if (result.Position == 1)
                            var start = new google.maps.LatLng(result.Latitude, result.Longitude);
                        if (result.Position == 4)
                            var end = new google.maps.LatLng(result.Latitude, result.Longitude);
                    }
                });
                //var start = new google.maps.LatLng(45.81324, 15.976808);
                //var end = new google.maps.LatLng(45.801028, 15.969941);
                waypts.push({ location: new google.maps.LatLng(45.816272, 15.973565), stopover: true });
                waypts.push({ location: new google.maps.LatLng(45.814553, 15.979264), stopover: true });
                break;
            case 2:
                //PointMarkers = @@Html.Action("GetRoute", "Home", new { rt = 2 });
                var start = new google.maps.LatLng(45.816272, 15.973565);
                var end = new google.maps.LatLng(45.776848, 15.979564);
                waypts.push({ location: new google.maps.LatLng(45.778771, 15.980921), stopover: true });
                break;              
                }
                var request = {
                    origin: start,
                    destination: end,
                    waypoints: waypts,
                    optimizeWaypoints: true,

                    travelMode: google.maps.TravelMode[selectedMode]
                };
        directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    }
                });
        //alert(PointMarkers);

    }

    // Add a marker to the map and push to the array.
    function addMarker(location, desc) {
        var marker = new google.maps.Marker({
            position: location,
            map: map
        });
        //markers.push(marker);
        var infowindow = new google.maps.InfoWindow({
            content: desc
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
            if (marker.getAnimation() != null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }
        });
    }


    google.maps.event.addDomListener(window, 'load', initialize);

        </script>
        <div id="panel">

        </div>
        <div id="map-canvas"></div>
    </div>
    <div class="col-xs-8 col-sm-6 col-md-2">
        Level 3: .col-xs-8 .col-sm-6
            <script type="text/javascript">
                function UpdateLabel() {
                    document.getElementById("infoLabel").innerText = "kliknuo si gumb, bravo";
                }
            </script>
    </div>
</div>

<div class="row">
    <div class="col-sm-9">
        <button type="button" class="btn btn-primary btn-lg btn-block" onclick="self.open('http://localhost:55152/MakeRoute')">GOOOOO!!!</button>
    </div>
</div>






